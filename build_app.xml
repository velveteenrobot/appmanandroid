<?xml version="1.0" encoding="UTF-8"?>
<!-- build file to be included from each app directory. -->
<project name="build-app-common"> 
  <property environment="env"/>
  <!--property name="target" value="1.6"/>
  <property name="source" value="1.6"/ -->
  
  <property file="default.properties" />

  <!-- directories -->
  <property name="pwd" location="."/>
  <property name="app.dir" location="."/>

  <path id="project.libraries.src">
    <pathelement location="${ros.pkg.android.dir}/library/src"/>
  </path>
  
  <path id="android.libraries.src"><path refid="project.libraries.src"/></path>
  <path id="android.libraries.jars"><path refid="project.libraries.jars"/></path>

  <mkdir dir="build/libs"/>
  <echo message="to dir build/libs" />
  <echo message="${ros.compile.jarfileset}" />
  <copy todir="build/libs" flatten="true">
    <files includes="${ros.compile.jarfileset}" />
  </copy>
  <!-- Needed to delete two jar files that interfere with eachother. 
       Hopefully this can be removed in the future. -->
  <delete>
    <fileset dir="build/libs" includes="mockito**.jar"/>
  </delete>
  <delete>
    <fileset dir="build/libs" includes="junit**.jar"/>
  </delete>
  
  <property name="external.libs.dir" location="build/libs" />
  <property name="jar.libs.dir" location="build/libs" />
    
  <!-- The build.properties file can be created by you and is never touched
       by the 'android' tool. This is the place to change some of the
       default property values used by the Ant rules.
       Here are some properties you may want to change/update:
       
       source.dir
       The name of the source directory. Default is 'src'.
       out.dir
       The name of the output directory. Default is 'bin'.
       
       Properties related to the SDK location or the project target should
       be updated using the 'android' tool with the 'update' action.
       
       This file is an integral part of the build system for your
       application and should be checked into Version Control Systems.
       
    -->
  <property file="project.properties" />
  
  <!-- The default.properties file is created and updated by the 'android'
       tool, as well as ADT.
       This file is an integral part of the build system for your
       application and should be checked into Version Control Systems. -->
  <property file="default.properties" />
  
  <!-- Required pre-setup import -->
  <!--<import file="${sdk.dir}/tools/ant/pre_setup.xml" />-->
  
  
  <!-- extension targets. Uncomment the ones where you want to do custom work
       in between standard targets -->
  <!--
     <target name="-pre-build">
     </target>
     <target name="-pre-compile">
     </target>
     
     [This is typically used for code obfuscation.
     Compiled code location: ${out.classes.absolute.dir}
     If this is not done in place, override ${out.dex.input.absolute.dir}]
     <target name="-post-compile">
     </target>
     -->
  
  <!-- Execute the Android Setup task that will setup some properties
       specific to the target, and import the build rules files.
       
       The rules file is imported from
       <SDK>/tools/ant/
         Depending on the project type it can be either:
         - main_rules.xml
         - lib_rules.xml
         - test_rules.xml
	 
         To customize existing targets, there are two options:
         - Customize only one target:
         - copy/paste the target into this file, *before* the
         <setup> task.
           - customize it to your needs.
	   - Customize the whole script.
	   - copy/paste the content of the rules files (minus the top node)
	   into this file, *after* the <setup> task
	     - disable the import of the rules by changing the setup task
	     below to <setup import="false" />.
	     - customize to your needs.
	     -->
  <target name="clean">
    <echo message="cleaning build, bin and gen" />
    <delete>
      <fileset dir="build" includes="**"/>
      <fileset dir="bin" includes="**"/>
      <fileset dir="gen" includes="**"/>
    </delete>
  </target>

  <target name="compile">
    <property name="build.target" value="-compile"/>
    <antcall target="-compile" />
  </target>

  <import file="${sdk.dir}/tools/ant/build.xml" />
</project>
